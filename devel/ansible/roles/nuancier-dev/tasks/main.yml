---
- name: Install basic packages & nuancier system dependencies
  dnf:
    name:
    - git
    - python-sphinx
    - vim-enhanced
    - gcc
    - libffi-devel
    - openssl-devel
    - python3-devel
    - redhat-rpm-config
    - python3-rpm
    state: present

# Add various helpful configuration files
- name: Install a custom bashrc
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy: src=bashrc dest=/home/{{ ansible_env.SUDO_USER }}/.bashrc

- name: Install the message of the day
  copy: src=motd dest=/etc/motd

- name: Install nuancier.cfg
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy: src=nuancier.cfg dest=/home/{{ ansible_env.SUDO_USER }}/nuancier.cfg

- name: Install alembic.ini
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy: src=alembic.ini.devel dest=/home/{{ ansible_env.SUDO_USER }}/alembic.ini


- name: Install nuancier requirements
  pip:
    requirements: "requirements.txt"
  args:
    chdir: /vagrant/

- name: Install nuancier test requirements
  pip:
    requirements: "test-requirements.txt"
  args:
    chdir: /vagrant/

- name: Install nuancier
  pip:
    name: "file:///vagrant/"
    extra_args: "-e"


# Create and configure the database
- name: Create the nuancier SQLite database
  become_user: "{{ ansible_env.SUDO_USER }}"
  command: python /vagrant/createdb.py
  args:
    creates: /var/tmp/nuancier_lite.sqlite
    chdir: "/home/{{ ansible_env.SUDO_USER }}/"

- name: Stamp the database with its current migration
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: >
      alembic stamp
      $(alembic heads | awk '{ print $1 }')
  args:
    chdir: "/home/{{ ansible_env.SUDO_USER }}/"


# Set up the service unit
- name: Install the systemd unit file for nuancier service
  copy:
    src: nuancier.service
    dest: /etc/systemd/system/nuancier.service
    mode: 0644

- name: Start nuancier service using systemd
  systemd:
    state: started
    name: nuancier
    daemon_reload: yes
    enabled: yes
